name: Release App

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-mac-intel:
    runs-on: macos-13 # Intel-based
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - run: pip install -r requirements.txt

      - run: bash build-mac-app.sh

      - uses: QQxiaoming/create-dmg-action@v0.0.2
        with:
          name: "family-rules-setup-intel"
          srcdir: "dist/FamilyRules.app"

      - uses: actions/upload-artifact@v4
        with:
          name: family-rules-setup-intel.dmg
          path: family-rules-setup-intel.dmg
          compression-level: 0
          retention-days: 1
          if-no-files-found: error

  build-mac-m1:
    runs-on: macos-14 # Apple Silicon (M1/M2/M3)
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - run: pip install -r requirements.txt

      - run: bash build-mac-app.sh

      - uses: QQxiaoming/create-dmg-action@v0.0.2
        with:
          name: "family-rules-setup-m1"
          srcdir: "dist/FamilyRules.app"

      - uses: actions/upload-artifact@v4
        with:
          name: family-rules-setup-m1.dmg
          path: family-rules-setup-m1.dmg
          compression-level: 0
          retention-days: 1
          if-no-files-found: error

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - run: pip install -r requirements.txt

      - shell: cmd
        run: build-windows-app.bat

      - name: List build output
        shell: cmd
        run: |
          echo "Contents of dist folder:"
          dir dist
          echo "Contents of dist\Family Rules folder:"
          dir "dist\Family Rules"

      - name: Create Installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: windows-installer.iss

      - uses: actions/upload-artifact@v4
        with:
          name: family-rules-setup.exe
          path: dist/family-rules-setup.exe
          compression-level: 0
          retention-days: 1
          if-no-files-found: error

  create-release:
    runs-on: ubuntu-latest
    needs: [build-mac-intel, build-mac-m1, build-windows]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: family-rules-setup-intel.dmg
      - uses: actions/download-artifact@v4
        with:
          name: family-rules-setup-m1.dmg
      - uses: actions/download-artifact@v4
        with:
          name: family-rules-setup.exe
      - run: ls

      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: "family-rules-setup.exe"
          asset_name: "family-rules-setup.exe"
          asset_content_type: application/vnd.microsoft.portable-executable

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: "family-rules-setup-intel.dmg"
          asset_name: "family-rules-setup-intel.dmg"
          asset_content_type: application/octet-stream

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: "family-rules-setup-m1.dmg"
          asset_name: "family-rules-setup-m1.dmg"
          asset_content_type: application/octet-stream